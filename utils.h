#ifndef UTILS_H
#define UTILS_H

#define SET_BIT(x, pos) (x |= (1U << pos))
#define CLEAR_BIT(x, pos) (x &= (~(1U<< pos)))
#define LOWBYTE(v)   ((unsigned char) (x))
#define HIGHBYTE(v)  ((unsigned char) (((unsigned int) (x)) >> 8))

#define CHECK_BIT(x, pos) (x & (1U << pos))
#define TOGGLE_BIT(x, pos) x ^= (1U<< pos)



// Our random number is actually just the time in ms since startup
// So remember that at the same exact ms you will have the same exact number
// And that it will loop after 50 days (ok this is not really a constraint)
#define GT_RANDOM millis() 
#define GT_RANDOM_RANGE(mini, maxi) (GT_RANDOM % (mini, maxi)) + mini

#include "ssd1306.h"

#define LOGO_EEPROM_ADDR 0
#define HIGH_SCORE_EEPROM_ADDR 160


// Use it only once to write log on eeprom before pushing the real game
void writeLogoOnEEPROM() {
  const unsigned char gameTinyLogo [160] = {
  0x00, 0xE0, 0x30, 0x28, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0xE4, 0x14, 0x0C,
  0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x3E, 0x41, 0x41,
  0x49, 0x3A, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x80, 0xFF, 0x00, 0x00, 0x7E, 0x09, 0x09, 0x09, 0x7E,
  0x00, 0x00, 0x7F, 0x01, 0x7E, 0x01, 0x7F, 0x00, 0x00, 0x7F, 0x49, 0x49, 0x49, 0x49, 0x00, 0x00,
  0x00, 0xFF, 0x02, 0x02, 0x02, 0x12, 0x12, 0xF2, 0x12, 0x12, 0x02, 0x02, 0x02, 0xFF, 0x01, 0x00,
  0xFF, 0x00, 0x00, 0x10, 0x10, 0xF0, 0x10, 0x10, 0x00, 0x00, 0xF0, 0x10, 0xE0, 0x00, 0xF0, 0x00,
  0x00, 0x70, 0x80, 0x80, 0x80, 0x70, 0x00, 0x00, 0x00, 0x3F, 0x20, 0x20, 0x20, 0x20, 0x20, 0x27,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x3F, 0x10, 0x08, 0x07, 0x00, 0x00, 0x04, 0x04, 0x07, 0x04, 0x04,
  0x00, 0x00, 0x07, 0x00, 0x03, 0x04, 0x07, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00
  };
  ssd1306_128x64_i2c_init();
  ssd1306_setFixedFont(ssd1306xled_font6x8);
  ssd1306_clearScreen();
  delay(1000);

  while(!eeprom_is_ready()) {}
  
  ssd1306_printFixed (0, 0, "Start writing to eeprom", STYLE_NORMAL);
  delay(1000);
  eeprom_write_block(gameTinyLogo, LOGO_EEPROM_ADDR, 160);
  ssd1306_printFixed (0, 0, "Finished writing to eeprom", STYLE_NORMAL);
  delay(1000); 
  ssd1306_clearScreen();

  unsigned char bitmapFromROM [160];
  ssd1306_printFixed (0, 0, "Reading back", STYLE_NORMAL);
  delay(1000); 
  eeprom_read_block(bitmapFromROM, LOGO_EEPROM_ADDR, 160);
  ssd1306_drawBuffer(0, 0, 40, 32, bitmapFromROM); 
}

#endif
